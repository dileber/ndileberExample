import java.text.SimpleDateFormat

apply plugin: 'com.android.application'
apply plugin: 'packer'
android {
    compileSdkVersion 25
    buildToolsVersion "26.0.1"
    defaultConfig {
        applicationId "com.example.ndileber.ndilebertest"

        minSdkVersion 15
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }
    signingConfigs {
        release {
            keyAlias 'key0'
            keyPassword '123456'
            storeFile file('keystore/dileber.jks')
            storePassword '123456'
            // 1. Gradle版本 >= 2.14.1
            // 2. Android Gradle Plugin 版本 >= 2.2.0
            // 作用是只使用旧版签名，禁用V2版签名模式
            v2SigningEnabled false
        }
    }

    buildTypes {
        release {
buildConfigField "String", "USER_ID","\"2222\""
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
buildConfigField "String", "USER_ID","\"2222\""
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    packer {
        def date = new SimpleDateFormat("yyyy-MM-dd-HH-mm-ss").format(new Date())
        checkSigningConfig = true
        checkZipAlign = true
        archiveOutput = file(new File(buildDir.path, "archives"));
        archiveNameFormat = '${appPkg}-${flavorName}-${buildType}-v${versionName}-${fileMD5}-' + date
    }
// 打包后应用名称
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            def fileName
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                if (variant.buildType.name.equals('release')) {
                    fileName = "${defaultConfig.applicationId}.${USER_ID}${defaultConfig.versionName}.apk"
                } else if (variant.buildType.name.equals('debug')) {
                    fileName = "${defaultConfig.applicationId}.${USER_ID}${defaultConfig.versionName}.apk"
                }

                output.outputFile = new File(outputFile.parent, fileName)
            }

        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile project(':dileber')
    //    compile 'com.github.dileber:dileber-release:1.0.0'
    compile project(':dileberui')
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support:design:25.3.1'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.android.support:support-v4:25.3.1'
    compile 'com.android.support:support-vector-drawable:25.3.1'
    compile 'com.android.support:cardview-v7:25.3.1'
    compile deps.tools.packer_helper
    testCompile 'junit:junit:4.12'
}

ext {
USER_ID= "2222"
}
